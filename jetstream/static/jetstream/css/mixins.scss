// ===================
// Media Query Mixins
// ===================

// Breakpoints
// $small-viewport: 500px; # aka landscape_phone_viewport
// $medium-viewport: 768px; # aka portrait_tablet_viewport
// $desktop-viewport: 1000px;

@mixin landscape-phone {
  @media (min-width: $small-viewport) {
    @content;
  }
}

@mixin portrait-tablet {
  @media (min-width: $medium-viewport) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $desktop-viewport) {
    @content;
  }
}

// For those times when you want behavior to apply ONLY on desktops, and NOT on landscape tablets.
@mixin real-desktop {
  @media (min-width: 1025px) {
    @content;
  }
}

// For those times when you need to use a non-mobile-first media query to apply rules ONLY on portrait phones.
// Only use when you ABSOLUTELY have to!
@mixin portrait-phone-only {
  @media (max-width: $small-viewport - 1) {
    @content;
  }
}

// There's a bug in IE11 that makes it ignore box-sizing: border-box when flex elements are sized via their flex-basis.
// The workaround for this is to convert the use of "flex: $width" to "flex: 1 1 auto; width: $width".
@mixin IE-compatible-flex-width($width) {
  flex: 1 1 auto;
  width: $width;
}

// ===================
// Functions
// ===================

@mixin our_clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin link-never-underline {
  // Mix this into a link's CSS to prevent that link from ever being underlined.
  &, &:visited, &:active, &:hover, &:focus {
    text-decoration: none;
  }
}

@mixin link-always-color($color) {
  // Mix this into a link's CSS to make it stay the same color under all circumstances.
  &, &:visited, &:active, &:hover, &:focus {
    color: $color;
  }
}

@mixin linksbglight($wrapper-class, $color-name, $color) {
  $classname: "bg-color-" + $color-name;
  $selector: ".#{$wrapper-class}.#{$classname}";

  #{$selector} {
    // We are adding a border to each $wrapper-class and then turning it off whenever we set a bg-color
    box-shadow: none;
    border: none;
    background-color: $color;
    h2 {
      color: darken($color, 20%);
      background-color: lighten($color, 10%);
    }
    .list-group-item {
      border-bottom: 1px solid lighten($color, 5%);
      &:hover {
        background-color: lighten($color, 10%);
      }
    }
    .list-group-item.active {
        color: darken($color, 10%);
        background-color: lighten($color, 5%);
    }
  }
}

@mixin linksbgdark($wrapper-class, $color-name, $color) {
  $classname: "bg-color-" + $color-name;
  $selector: ".#{$wrapper-class}.#{$classname}";

  #{$selector} {
    // We are adding a border to each $wrapper-class and then turning it off whenever we set a bg-color
    box-shadow: none;
    border: none;
    background-color: $color;
    h2 {
      color: lighten($color, 20%);
      background-color: darken($color, 10%);
    }
    .list-group-item {
      border-bottom: 1px solid lighten($color, 5%);
      &:hover {
        background-color: darken($color, 10%);
      }
    }
    .list-group-item.active {
      color: darken($color, 30%);
      background-color: darken($color, 5%);
    }
  }
}

// used in Image Panel/Carousel/etc.
@mixin text-gradient--bottom {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 50%;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.7));
}

@mixin text-gradient--right {
  position: absolute;
  right: 0;
  top: 0;
  background-image: linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,0.6) 30%, rgba(0,0,0,0.6));
  width: 75%;
  height: 100%;
}

// make this match the Bootstrap 3 styles
@mixin carousel_indicators {
  left: auto;
  right: 3%;
  bottom: 3%;
  position: static;
  margin: 1rem 0;

  @include portrait-tablet {
    position: absolute;
    margin-right: 0;
    margin-left: 0;
  }

  li {
    width: 15px;
    height: 15px;
    margin: 0 10px;
    cursor: pointer;
    background-color: rgba(0,0,0,0);
    border: 1px solid $black;
    border-radius: 10px;

    &.active {
      background-color: black;
    }

    @include portrait-tablet {
      border-color: white;
      width: 10px;
      height: 10px;
      margin: 0 5px;

      &.active {
        background-color: white;
      }
    }
  }
}

@mixin wrapper-link {
  // This provides a 100% x 100% link overlay so that the background image in the element has an overlay.
  // Mainly used to make links that overlay background images.
  // NOTE: When using this mixin, ensure that the direct parent of the mixed-in class has "position: relative".
  .wrapper-expander {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
  }
}

@mixin responsive-images-inside {
  // This mixin makes all <img> tags inside the mixed-in class act responsively.

  // Always size up imgs to fill their parent...
  img {
    width: 100%;
    height: auto;
  }
  // ... unless it's a top-level image on a larger-than-phone device...
  &.top-level {
    @include landscape-phone {
      img {
        width: auto;
      }
    }
  }
  // or it's being displayed on a desktop device.
  @include desktop {
    img {
      // We use "width: auto" here because of the ceil() call in the {% width_from_arbitrary_parent %} tag. If we didn't
      // do this, the fact that the image is a partial pixel wider than it's supposed to be will cause "width: 100%" to
      // shrink the height of the image by just a tiny bit, ruining the clean layout. With "width: auto" instead, the
      // image stays its original size, and the "overflow: hidden" rule on the column elements hides the extra partial
      // pixel.
      width: auto;
    }
  }
  // TODO: We have not yet solved the problem that the above CSS causes with different-size images on portait tablets.
  // There's a trello card (https://trello.com/c/0ZPkDZfx) with a potential solution, but we will likely not be doing
  // that until theme 7.0.
}
/*************** Image Caption ***************/
@mixin image-details {
  line-height: 1.5;
  margin-top: 10px;
  display: block;
  color: $grey-800;

  @media (max-width: $medium-viewport) {
    padding-left: 10px;
    padding-right: 10px;
  }

  .image-caption {
    font-size: 12px;
    display: block;
  }

  .image-credit {
    font-size: 11px;
    font-style: italic;
    display: block;
  }
}
