.image-carousel {
  // On phones, the images get resized to a different size, but the carousel markup still has style="max-height: 350px",
  // or whatever, to size the block correctly for the layout its in. We must forcibly ignore that on phones because they
  // ignore the specified layout and convert it into a single column flow with different sizes.
  @include portrait-phone-only {
    max-height: unset !important;
  }

  &__banner {
    position: absolute;
    top: 0;
    width: 100%;
    height: 42px;
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 5;

    &__header {
      position: absolute;
      margin: 10px 0 10px 25px;
      font-family: $font-sans-serif;
      color: $white;
      font-weight: normal;
      font-size: 1.17em;
    }
  }

  // We need to use nesting here to override Bootstrap 4's default fade transition rules.
  & &__item {
    transition-duration: 0.8s;
    transition-timing-function: ease-out;
  }

  &__item {
    &__wrapper-link {
      @include wrapper-link;
    }

    &__image {
      // Ensures that images resize themselves properly on phones.
      width: 100%;
      height: auto;
    }

    &__text-wrapper {
      @include text-gradient--bottom;
    }

    &__text {
      font-size: 16px;
      font-family: $font-sans-serif-bold;
      position: absolute;
      bottom: 0;
      right: 0;
      padding: 0 15px 10px 20px;
      text-align: right;
      color: white;

      &__link-icon {
        height: 25px;
        width: 25px;
        margin-bottom: -6px;
        margin-left: -5px;
        fill: $orange-accessible;
      }
    }
  }

  // Only display the controls when the user hovers them. And replace the gradiant background with a solid black 30%
  // opacity block.
  &__control {
    background: none;
    &:hover {
      background: rgba(0, 0, 0, 0.3);
    }

    // Hide the component by default. This style of hiding is needed because if we just hide the control itself, the
    // user can't hover it in order to make the background and component appear.
    &__component {
      visibility: hidden;
    }

    // When the component's parent is hovered, show the component.
    &:hover &__component {
      visibility: visible;
    }
  }
}
